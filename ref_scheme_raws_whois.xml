<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="content.xsl"?>
<page>
	<title>&lt;whois&gt;</title>
	<section>
		<title>Description</title>
		<paragraph>This element defines output for the whois raws.</paragraph>
		<paragraph>This element is optional and may appear only once per scheme.</paragraph>
	</section>
	<section>
		<title>Attributes</title>
		<attributes>
			<attribute name="color" required="No" evaluated="Yes" defaultvalue="normal text color" datatype="Numeric">The color to be used when the engine /echos the data.</attribute>
			<attribute name="indent" required="No" evaluated="Yes" defaultvalue="N\A" datatype="Numeric">The amount of indent the engine should use when the data is wrapped.</attribute>
			<attribute name="target" required="No" evaluated="Yes" defaultvalue="status" datatype="Mixed">The window in which the data should be displayed.  May be a window name or a keyword (see below) and multiple keywords may be used.</attribute>
			<attribute name="sound" required="No" evaluated="No" defaultvalue="N\A" datatype="Resource">The name of the resource sound file to be played when the raw is triggered.</attribute>
			<attribute name="halted" required="No" evaluated="Yes" defaultvalue="false" datatype="Boolean">Whether or not the engine should halt output for this raw.</attribute>
		</attributes>
	</section>
	<section>
		<title>Keywords</title>
		<keywords attribute="target">
			<keyword name="active">Sends output to the active window, regardless of which connection triggered the output</keyword>
			<keyword name="activechannels">Sends output to all channels on the active connection</keyword>
			<keyword name="localchannels">Sends output to all channels on the connection where the output was triggered</keyword>
			<keyword name="globalchannels">Sends output to all channels on all connections</keyword>
			<keyword name="activestatus">Sends output to the status window of the active connection</keyword>
			<keyword name="localstatus">Sends output to the status window of the connection that triggered the output</keyword>
			<keyword name="globalstatus">Sends output to all status windows</keyword>
			<keyword name="allactive">Sends output to the status window and all channels of the active connection</keyword>
			<keyword name="alllocal">Sends output to the status window and all channels on the connection that triggered the output</keyword>
			<keyword name="allglobal">Sends output to all channel and status windows</keyword>
		</keywords>
	</section>
	<section>
		<title>Data</title>
		<paragraph>Text, mIRC control codes and identifiers and constant keywords.</paragraph>
		<paragraph>Multiple line entries are supported and will be displayed as individual lines.</paragraph>
		<paragraph>
			To retrieve whois information from the engine, you must use the $mts.whois() identifer.  Below is a list of arguments for this identifer and a short description of the returned information.
		</paragraph>
		<identifiers>
			<identifier name="$mts.whois(nick)">Returns the name of the person associated with the current whois</identifier>
			<identifier name="$mts.whois(userid)">Returns the userid (or ident)</identifier>
			<identifier name="$mts.whois(hostname)">Returns the hostname</identifier>
			<identifier name="$mts.whois(ircname)">Returns the ircname or "real name"</identifier>
			<identifier name="$mts.whois(server)">Returns the server the person is connected to</identifier>
			<identifier name="$mts.whois(channels)">Returns the list of channels the user is on</identifier>
			<identifier name="$mts.whois(idle)">Returns the idle time, in seconds</identifier>
			<identifier name="$mts.whois(signon)">Returns the time the user signed on, in $asctime format</identifier>
			<identifier name="$mts.whois(looks)">Returns the how the user "looks" (helpful, ect.)</identifier>
			<identifier name="$mts.whois(ircop)">Returns the user's IRCop status</identifier>
			<identifier name="$mts.whois(login)">Returns the login name being used by the user</identifier>
		</identifiers>
	</section>
	<section>
		<title>Engine Requirements</title>
		<paragraph>The engine should fill the data returned by the $mts.whois() identifier by catching AND halting the raws associated with each bit of data.  If any of the associated numeric raws have been defined by the theme, they should be processed normally, in addition to collecting the data from them.  Groups of data should be kept to the connection id ($cid) from which the raws were received to avoid data overlapping in the event of multiple whois requests.</paragraph>
		<paragraph>Upon recieving the raw numeric 318 the engine should display the data contained within the whois tag, unsetting all of the stored data after the display.</paragraph>
		<paragraph>The color, indent and target attributes should be evaluated and inserted into the /echo command in the proper place. When a keyword is used in the target attribute, the engine should process the keyword as specified (see the "Keywords" section for the target attribute).</paragraph>
		<paragraph>Multiple lines should be displayed individually, each line retaining the settings specified in the color, indent and target attributes.</paragraph>
		<paragraph>If the halted attribute is set to true, the engine should evaluate the text contained within the raw but NOT display it.</paragraph>
	</section>
	<section>
		<title>Examples</title>
		<example title="Declaration">
 <![CDATA[<whois color="14" target="active,activestatus,@whois_history" indent="20">
	[ /whois for: $mts.whois(nick) ]----------------------------------
	-> address: $+($mts.whois(userid),@,$mts.whois(hostname))
	-> real name: $mts.whois(ircname)
	-> channels: $mts.whois(channels)
	-> server: $mts.whois(server)
	$iif($mts.whois(ircop),-> ircop: $v1)
	-> $mts.whois(nick) has been idle for $duration($mts.whois(idle))
	-------------------------------------------------[ end of /whois ]
 </whois>]]>
		</example>
	</section>
</page>